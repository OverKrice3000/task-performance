1. Перенес возвращение массива контактов в addContacts потому что он не меняется в слушателе.
Это дало не такой большой прирост, как остальные пункты (срезало ~80мс выполнения скрипта при прокрутке на 4 контакта)
2. Убрал функцию map, функция findIndex теперь выполняется над массивом контактов, заменил в findIndex offset на item.offsetTop
Это дало большой прирост производительности, т.к. функция map проходила по всему массиву контактов, что требовало огромного времени.
(итого ~20мс выполнения скрипта при прокрутке на 4 контакта в начале списка)
3. Заменил стандартную функцию findIndex на собственную, т.к. findIndex проходит по массиву последовательно.
В связи с этим прокрутка в конце списка контактов очень медленная (~800мс выполнения скрипта при прокрутке на 4 контакта в конце списка).
Новая функция запоминает предыдущее значение контакта в sticky header, начинает обходить массив с этого значения.
(итого ~40мс выполнения скрипта при прокрутке на 4 контакта в любом месте списка)
4. Функция, добавляющая элементы DOM дерева теперь загружает их частями, когда пользователь приблизился к концу загруженного списка.
По идее это снижает критический путь. (Подсказок не понял)